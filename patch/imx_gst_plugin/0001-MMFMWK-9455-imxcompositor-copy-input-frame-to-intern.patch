From 50bcb337f30166dca9a964be1418d0c6c03f8fd7 Mon Sep 17 00:00:00 2001
From: Hou Qi <qi.hou@nxp.com>
Date: Wed, 11 Dec 2024 09:15:22 +0800
Subject: [PATCH] MMFMWK-9455 imxcompositor: copy input frame to internal
 bufferpool instead of new allocated buffer

When running below pipeline, imxcompositor_g2d received input buffer
is allocated by upstream since allocation sent from tee doesn't
need downstream pool. Then imcompositor will copy this input frame
to physical continuous memory.

Need to copy input frame to internal bufferpool with alignment instead
of new allocated tmp buffer that has no alignment. Otherwise g2d src
stride and plane offset calculation may be wrong.

gst-launch-1.0 videotestsrc ! video/x-raw,width=640,height=480,format=YUY2 ! videoscale !
video/x-raw,width=513,height=513 ! tee ! queue ! imxcompositor_g2d ! waylandsink sync=false

Signed-off-by: Hou Qi <qi.hou@nxp.com>
---
 plugins/compositor/gstimxcompositor.c    | 23 ++++++++--------
 plugins/compositor/gstimxcompositorpad.c | 35 ++++++------------------
 2 files changed, 19 insertions(+), 39 deletions(-)

diff --git a/plugins/compositor/gstimxcompositor.c b/plugins/compositor/gstimxcompositor.c
index cbb1d9b..d212152 100755
--- a/plugins/compositor/gstimxcompositor.c
+++ b/plugins/compositor/gstimxcompositor.c
@@ -390,19 +390,18 @@ gst_imxcompositor_sink_query (GstAggregator * agg, GstAggregatorPad * bpad,
         }
       }
 
-      if (need_pool) {
-        if (!gst_video_info_from_caps (&info, caps))
-          return FALSE;
+      // always create sink_pool no matter whether upstream needs it
+      if (!gst_video_info_from_caps (&info, caps))
+        return FALSE;
 
-        size = GST_VIDEO_INFO_SIZE (&info);
-        pool = gst_imxcompositor_create_bufferpool(imxcomp, caps, size,
-            IMX_COMPOSITOR_INPUT_POOL_MIN_BUFFERS,
-            IMX_COMPOSITOR_INPUT_POOL_MAX_BUFFERS);
-        if (pool) {
-          GST_IMX_COMPOSITOR_UNREF_POOL(imxcompo_pad->sink_pool);
-          imxcompo_pad->sink_pool = pool;
-          imxcompo_pad->sink_pool_update = TRUE;
-        }
+      size = GST_VIDEO_INFO_SIZE (&info);
+      pool = gst_imxcompositor_create_bufferpool(imxcomp, caps, size,
+          IMX_COMPOSITOR_INPUT_POOL_MIN_BUFFERS,
+          IMX_COMPOSITOR_INPUT_POOL_MAX_BUFFERS);
+      if (pool) {
+        GST_IMX_COMPOSITOR_UNREF_POOL(imxcompo_pad->sink_pool);
+        imxcompo_pad->sink_pool = pool;
+        imxcompo_pad->sink_pool_update = TRUE;
       }
 
       if (pool) {
diff --git a/plugins/compositor/gstimxcompositorpad.c b/plugins/compositor/gstimxcompositorpad.c
index 354808a..13cc1f3 100755
--- a/plugins/compositor/gstimxcompositorpad.c
+++ b/plugins/compositor/gstimxcompositorpad.c
@@ -636,33 +636,14 @@ gst_imxcompositor_pad_prepare_frame (GstVideoAggregatorPad * pad, GstVideoAggreg
     gst_video_info_from_caps(&info, caps); //update the size info
     gst_caps_unref(caps);
 
-    if (!imxcomp->allocator) {
-#ifdef USE_DMABUFHEAPS
-      imxcomp->allocator = gst_dmabufheaps_allocator_obtain ();
-#endif
-#ifdef USE_ION
-      if (!imxcomp->allocator) {
-        imxcomp->allocator = gst_ion_allocator_obtain ();
-      }
-#endif
-    }
-
-    if (!imxcomp->allocator)
-      imxcomp->allocator =
-          gst_imx_2d_device_allocator_new((gpointer)(imxcomp->device));
-
-    if (!cpad->sink_tmp_buf) {
-      cpad->sink_tmp_buf = gst_buffer_new_allocate(imxcomp->allocator,
-          SINK_TEMP_BUFFER_INIT_SIZE, NULL);
-      cpad->sink_tmp_buf_size = SINK_TEMP_BUFFER_INIT_SIZE;
-    }
-
-    if (cpad->sink_tmp_buf && info.size > SINK_TEMP_BUFFER_INIT_SIZE) {
-      if (cpad->sink_tmp_buf)
-        gst_buffer_unref(cpad->sink_tmp_buf);
-      cpad->sink_tmp_buf = gst_buffer_new_allocate(imxcomp->allocator,
-          info.size, NULL);
-      cpad->sink_tmp_buf_size = info.size;
+    if (cpad->sink_pool && !cpad->sink_tmp_buf) {
+      gst_buffer_pool_set_active(cpad->sink_pool, TRUE);
+      GstFlowReturn ret = gst_buffer_pool_acquire_buffer(cpad->sink_pool,
+                                                  &(cpad->sink_tmp_buf), NULL);
+      if (ret != GST_FLOW_OK)
+        GST_ERROR_OBJECT (pad, "error acquiring input buffer: %s", gst_flow_get_name(ret));
+      else
+        GST_LOG_OBJECT (pad, "created input buffer (%p)", cpad->sink_tmp_buf);
     }
 
     if (cpad->sink_tmp_buf) {
-- 
2.39.5

