From 40a5c0233eadfe1e7106ebfe70e643def56cb7d7 Mon Sep 17 00:00:00 2001
From: NXP debian <debian@nxp.com>
Date: Sat, 1 Feb 2025 20:27:14 -0800
Subject: [PATCH 1/5] Add support for i.MX93 FRDM board

Signed-off-by: Danwei Luo <danwei.luo@nxp.com>
---
 demos.json                               | 44 ++++++++++++------------
 scripts/machine_learning/dms/dms_demo.py |  2 +-
 2 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/demos.json b/demos.json
index c2b2b0f..a046eff 100644
--- a/demos.json
+++ b/demos.json
@@ -4,7 +4,7 @@
              "name": "Image Classification",
              "id": "obj_class_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/nnstreamer/classification/image_classification.py",
-             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95",
+             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95, imx93frdm",
              "screenshot": "image_classification.jpg",
              "icon": "ml-icon.svg",
              "description": "Image classification example using NNStreamer. Image classification is an ML task that attempts to comprehend an entire image as a whole. The goal is to classify the image by assigning it to a specific label. Typically, it refers to images in which only one object appears and is analyzed. An internet connection may be required."
@@ -12,7 +12,7 @@
              "name": "Object Detection",
              "id": "obj_detect_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/nnstreamer/detection/object_detection.py",
-             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95",
+             "compatible": "imx8mp, imx93, imx8mm, imx8qmmek, imx95, imx93frdm",
              "screenshot": "ml_detect.jpg",
              "icon": "ml-icon.svg",
              "description": "Object detection example using NNStreamer. Object detection is the ML task that detects instances of objects of a certain class within an image. A bounding box and a class label are found for each detected object. An internet connection may be required."
@@ -20,7 +20,7 @@
              "name": "Pose Estimation",
              "id": "pose_detect_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/nnstreamer/pose/pose_estimation.py",
-             "compatible": "imx8mp, imx8mm, imx8qmmek, imx93, imx95",
+             "compatible": "imx8mp, imx8mm, imx8qmmek, imx93, imx95, imx93frdm",
              "screenshot": "pose-estimation.jpg",
              "icon": "ml-icon.svg",
              "description": "Pose estimation example using NNStreamer. The goal of pose estimation is to detect the position and orientation of a person or object. In human pose estimation, this is usually done with specific keypoints such as hands, head, legs, etc. An internet connection may be required."
@@ -28,7 +28,7 @@
              "name": "ML Gateway",
              "id": "ml_gate_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/ml_gateway/ml_gateway.py",
-             "compatible": "imx8mp, imx8mm, imx93",
+             "compatible": "imx8mp, imx8mm, imx93, imx93frdm",
              "screenshot": "ml_gateway.jpg",
              "icon": "ml-icon.svg",
              "description": "ML Gateway easily configures the i.MX 8M Plus and i.MX 93 EVKs as machine learning accelerator servers and allows resource-constrained MPU systems (clients) without NPUs to connect and run ML inference. This is currently enabled for i.MX 8M Mini on the client side."
@@ -36,7 +36,7 @@
              "name": "Selfie Segmenter",
              "id": "selfie_nn",
              "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/selfie_segmenter/selfie_segmenter.py",
-             "compatible": "imx8mp, imx93",
+             "compatible": "imx8mp, imx93, imx93frdm",
              "screenshot": "selfie_segmenter.jpg",
              "icon": "ml-icon.svg",
              "description": "Selfie Segmenter showcases the ML capabilities of i.MX 8M Plus and i.MX 93 by using the NPU to accelerate an instance segmentation model. This model lets you segment the portrait of a person and can be used to replace or modify the background of an image. An internet connection is required."
@@ -44,7 +44,7 @@
               "name": "i.MX Smart Fitness",
               "id": "imx-smart-fitness",
               "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/imx_smart_fitness/imx_smart_fitness.py",
-              "compatible": "imx8mp, imx93",
+              "compatible": "imx8mp, imx93, imx93frdm",
               "screenshot": "imx-smart-fitness.jpg",
               "icon": "ml-icon.svg",
               "description": "i.MX Smart Fitness showcases the i.MX' Machine Learning capabilities by using an NPU to accelerate two Deep Learning vision-based models. Together, these models detect a person present in the scene and predict 33 3D-keypoints to generate a complete body landmark, known as pose estimation. From the pose estimation, a K-NN pose classifier classifies two different body poses: 'Squat-Down' and 'Squat-Up'. The application tracks the 'squats' fitness exercise and the repetition counter is set to 12 repetitions in an infinite loop."
@@ -52,7 +52,7 @@
         "TFLite":[{
             "name": "ML Benchmark",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/ml_benchmark/ml_benchmark.py",
-            "compatible": "imx8mp, imx93, imx95",
+            "compatible": "imx8mp, imx93, imx95, imx93frdm",
             "screenshot": "ml_benchmark.jpg",
             "icon": "speedometer.svg",
             "description": "This tool allows to easily compare the performance of TensorFlow Lite models running on CPU (Cortex-A) and NPU. The tool works on i.MX 93 and i.MX 8M Plus."
@@ -61,7 +61,7 @@
             "name": "Face Recognition",
             "id": "face_recog",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/face_recognition.py",
-            "compatible": "imx8mp",
+            "compatible": "imx8mp, imx93frdm",
             "screenshot": "face_recognition.jpg",
             "icon": "ml-icon.svg",
             "description": "An OpenCV application example of how to use machine learning to recognize faces. The user can save multiple profiles and the application will recognize the identity of each person by their names. An internet connection is required."
@@ -69,7 +69,7 @@
             "name": "DMS",
             "id": "dms",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/dms/launcher.py",
-            "compatible": "imx8mp, imx93",
+            "compatible": "imx8mp, imx93, imx93frdm",
             "screenshot": "dms.jpg",
             "icon": "ml-icon.svg",
             "description": "An example over how to implement a Driver Monitoring System (DMS) using the NPU. An internet connection is required."
@@ -78,7 +78,7 @@
             "name": "LP Baby Cry Detection",
             "id": "lp_baby_cry",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/low_power_ml/lp_baby_cry_detection.py",
-            "compatible": "imx93",
+            "compatible": "imx93, imx93frdm",
             "screenshot": "LP-baby-cry-detection.jpg",
             "icon": "ml-icon.svg",
             "description": "Note: To run this example, append 'clk_ignore_unused' in u-boot 'mmcargs' env, before booting linux. An application example showing how to implement baby crying and glass breaking detection in Cortex-M33 core when Linux is in suspend mode. When the application is started, Linux enters suspend mode, and users must enter the timeout value in Cortex-M33 console. Then Cortex-M33 records one second audio input from MIC array on the i.MX 93 EVK board, and try to identify whether there is baby crying or glass breaking sound in the audio by running ML model inference. If baby crying or glass breaking sound is detected, it will wake up Cortex-A55 core and send the result to Linux through rpmsg-tty. If baby crying or glass breaking sound is not detected, it will suspend Cortex-M33 core for the configured timeout and wake up Cortex-M33 core to record one second audio again, and run the same process in an infinite loop until a baby crying or glass breaking sound is detected. An internet connection is required."
@@ -86,7 +86,7 @@
             "name": "LP KWS Detection",
             "id": "lp_kws",
             "executable": "python3 /opt/gopoint-apps/scripts/machine_learning/low_power_ml/lp_kws_detection.py",
-            "compatible": "imx93",
+            "compatible": "imx93, imx93frdm",
             "screenshot": "LP-kws-detection.jpg",
             "icon": "ml-icon.svg",
             "description": "Note: To run this example, append 'clk_ignore_unused' in u-boot 'mmcargs' env, before booting linux. An application example showing how to implement key word detection in Cortex-M33 core when Linux is in suspend mode. When the application is started, Linux enters suspend mode. Cortex-M33 will record one second audio input from MIC array on the i.MX 93 EVK board, and try to identify whether there is key word UP in the audio by running ML model inference. If key word is detected, it will wake up Cortex-A55 core and stop. If no key word is detected, it will record one second audio again, and run the same process in an infinite loop until a key word is detected. An internet connection is required."
@@ -101,7 +101,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "gst_test_src_screenshot.jpg",
-            "compatible": "imx7ulp, imx8ulp, imx8qxpc0mek, imx8qmmek, imx8mq, imx8mm, imx8mn, imx8mp, imx93",
+            "compatible": "imx7ulp, imx8ulp, imx8qxpc0mek, imx8qmmek, imx8mq, imx8mm, imx8mn, imx8mp, imx93, imx93frdm",
             "description": "This is a simple demo utility that allows users to play back video captured on a camera or a test source."
         },{
             "name": "Camera using VPU",
@@ -110,7 +110,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "camera-vpu.jpg",
-            "compatible": "imx8mp",
+            "compatible": "imx8mp, imx93frdm",
             "description": "This is a GStreamer pipeline able to create a camera preview example using VPU to encode and decode the image."
         },{
             "name": "Video To Texture Demo",
@@ -119,7 +119,7 @@
             "source": "",
             "icon": "photo-video-solid.svg",
             "screenshot": "video_to_texture.png",
-            "compatible": "imx95, imx8qmmek",
+            "compatible": "imx95, imx8qmmek, imx93frdm",
             "description": "Demonstrates Video to texturing functionality of gstreamer within a QT video player application"
         },{
             "name": "2Way Video Streaming",
@@ -128,7 +128,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "two-way-video-streaming.jpg",
-            "compatible": "imx8mp, imx8mm",
+            "compatible": "imx8mp, imx8mm, imx93frdm",
             "description": "Allows user to implement a two way video streaming demo that displays video encode and decode capabilities between i.MX devices in local network."
         },{
             "name": "Multi Cameras Preview",
@@ -137,7 +137,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "multi_cameras.jpg",
-            "compatible": "imx8mp",
+            "compatible": "imx8mp, imx93frdm",
             "description": "This is a GStreamer pipeline able to create a camera preview example using a Basler/OS08A20 camera and an OV5640 camera simultaneously."
         }],
         "ISP":[{
@@ -147,7 +147,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "isp_demo.png",
-            "compatible": "imx8mp",
+            "compatible": "imx8mp, imx93frdm",
             "description": "This program opens a GStreamer pipeline and allows the user to change various parameters of the ISP in real time. This example application works with Basler and OS08A20 cameras."
         },{
             "name": "Video Dump",
@@ -156,7 +156,7 @@
             "source": "",
             "icon": "multimedia-icon.svg",
             "screenshot": "video-dump.jpg",
-            "compatible": "imx8mp",
+            "compatible": "imx8mp, imx93frdm",
             "description": "This program allows users to dump the raw frame data from a camera onto a connected drive. This demo will only work with a compatible Basler camera."
         }],
         "Audio":[{
@@ -186,7 +186,7 @@
             "source": "",
             "icon": "voice-control.svg",
             "screenshot": "voice-control.jpg",
-            "compatible": "imx8mp, imx8mm",
+            "compatible": "imx8mp, imx8mm, imx93frdm",
             "description": "See NXP's Voice Technology in action! Use your voice to open and close various applications. This requires 8-MIC Array Board (8MIC-RPI-MX8) installed on the i.MX hardware (Visit NXP.com for help). Please note that this will override '/etc/asound.conf' file. It will be restored if this application is gracefully terminated."
         },
         {
@@ -196,7 +196,7 @@
             "source": "",
             "icon": "voice-control.svg",
             "screenshot": "multimedia-player.jpg",
-            "compatible": "imx8mm, imx8mp, imx93",
+            "compatible": "imx8mm, imx8mp, imx93, imx93frdm",
             "description": "This is an application for controlling an audio player using the Bluetooth communication protocol by the use of voice commands. WakeWord supported:'HEY NXP'. Voice commands supported : PLAY MUSIC, PAUSE, PREVIOUS SONG, NEXT SONG, VOLUME UP, VOLUME DOWN, MUTE, STOP, STOP PLAYER. This application requires 8-MIC Array Board (8MIC-RPI-MX8) installed on the i.MX hardware (Visit NXP.com for help)."
         },
         {
@@ -206,7 +206,7 @@
             "source": "",
             "icon": "voice-control.svg",
             "screenshot": "smart-kitchen-screenshot.jpg",
-            "compatible": "imx8mm, imx8mp, imx93",
+            "compatible": "imx8mm, imx8mp, imx93, imx93frdm",
             "description": "This application simulates a smart kitchen controlled by voice commands using NXP's Voice Intelligent Technology (VIT). How to use: First say a wakeword to select a kitchen's item (hood, oven or aircon) and then say one of the item's available commands (e.g. \"Hey hood, light on\"). WakeWords supported are HEY HOOD, HEY OVEN, HEY AIRCON. Global Commands are ENTER, EXIT, RUN DEMO, STOP DEMO. Hood commands are FAN OFF, FAN ON, FAN LOW, FAN HIGH, LIGHT OFF, LIGHT ON. Aircon commands are DRY MODE, COOL MODE, FAN MODE SWING OFF, SWING ON, FAN LOW, FAN HIGH. Oven commands are CLOSE DOOR, OPEN DOOR. The item's functions can also be activated by clicking on the item's controls using a mouse or touchscreen."
         },
         {
@@ -216,7 +216,7 @@
              "source": "",
              "icon": "ebike-vit-icon.svg",
              "screenshot": "ebike-vit-screenshot.jpg",
-             "compatible": "imx8mm, imx8mp, imx93",
+             "compatible": "imx8mm, imx8mp, imx93, imx93frdm",
              "description": "This application simulates a ebike controlled by voice commands using NXP's Voice Intelligent Technology (VIT). First say a wakeword to wake up ebike and then say one of the available commands.The supported wake words are HEY NXP, HEY E-Bike. Global Commands are NEXT PAGE, LAST PAGE, RUN DEMO, STOP DEMO. The page can also be switched by clicking on the UI using a mouse or touchscreen."
 	}]
     }]
diff --git a/scripts/machine_learning/dms/dms_demo.py b/scripts/machine_learning/dms/dms_demo.py
index c33fe6a..e4ba91f 100644
--- a/scripts/machine_learning/dms/dms_demo.py
+++ b/scripts/machine_learning/dms/dms_demo.py
@@ -187,7 +187,7 @@ class DMSDemo:
             + "name=comp sink_1::xpos=0 sink_1::ypos=0 "
             + "sink_0::xpos=840 sink_0::ypos=4 ! cairooverlay name=drawer ! "
             + "queue max-size-buffers=2 leaky=2 ! waylandsink "
-            + "window_width=1920 window-height=1080 "
+            + "window_width=1280 window-height=720 "
             + "cam. ! queue max-size-buffers=2 leaky=2 ! "
             + videoconvert
             + "video/x-raw,height="
-- 
2.43.0

